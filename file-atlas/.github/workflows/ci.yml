name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run tests with coverage
      run: npm test -- --coverage
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
    - name: Run performance tests
      run: |
        npm install puppeteer --save-dev
        node tests/performance.test.js
    - name: Run security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          npm run build:win
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          npm run build:mac
        else
          npm run build:linux
        fi
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: file-atlas-${{ matrix.os }}
        path: dist/*